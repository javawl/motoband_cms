<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


	<!-- 定义加载资源文件 -->

	<context:property-placeholder location="classpath:datasource.properties"
		ignore-unresolvable="true" />

	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${jdbc.driverClassName}"/> <property 
		name="url" value="${jdbc.url}"/> </bean> -->


	<bean id="windowstest" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.test.url}" />
		<property name="username" value="${jdbc.test.user}" />
		<property name="password" value="${jdbc.test.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="true" />
	</bean>
	
		<bean id="production" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.prod.url}" />
		<property name="username" value="${jdbc.prod.user}" />
		<property name="password" value="${jdbc.prod.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="true" />
	</bean>

<!-- 	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter"> -->
<!-- 		<property name="statementLogErrorEnabled" value="true" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter"> -->
<!-- 		<property name="slowSqlMillis" value="100000" /> -->
<!-- 		<property name="logSlowSql" value="true" /> -->
<!-- 	</bean> -->

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="${databasesenv}" />
	</bean>

	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	<context:component-scan base-package="com.motoband" />

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:MyBatisConfiguration.xml" />
		<property name="dataSource" ref="${databasesenv}" />
		<property name="mapperLocations" value="classpath:com/motoband/**/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.motoband" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.motoband" />
		<property name="annotationClass" value="com.motoband.util.mapper.MyBatisRepository" />
	</bean>

</beans>